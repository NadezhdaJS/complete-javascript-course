'use strict';
const game = {
  team1: 'Bayern Munich',
  team2: 'Borrussia Dortmund',
  players: [
    [
      'Neuer',
      'Pavard',
      'Martinez',
      'Alaba',
      'Davies',
      'Kimmich',
      'Goretzka',
      'Coman',
      'Muller',
      'Gnarby',
      'Lewandowski',
    ],
    [
      'Burki',
      'Schulz',
      'Hummels',
      'Akanji',
      'Hakimi',
      'Weigl',
      'Witsel',
      'Hazard',
      'Brandt',
      'Sancho',
      'Gotze',
    ],
  ],
  score: '4:0',
  scored: ['Lewandowski', 'Gnarby', 'Lewandowski', 'Hummels'],
  date: 'Nov 9th, 2037',
  odds: {
    team1: 1.33,
    x: 3.25,
    team2: 6.5,
  },
};

/* //–†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∏–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ game
const {
  players: [players1, players2],
} = game; // –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: const [players1, players2] = game.players;

console.log(players1);
console.log(players2);
//–í—ã—Ç–∞—â–∏–ª–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ -–≤—Ä–∞—Ç–∞—Ä—è, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª–µ–≤—ã–µ –∏–≥—Ä–æ–∫–∏ —Å –ø–æ–º–æ—â—å—é rest pattern
let [gk, ...fieldPlayers] = players1;
console.log(gk, fieldPlayers);
//–†–∞—Å–ø–∞–∫–æ–≤–∞–ª–∏ –º–∞—Å—Å–∏–≤—ã –æ–±–æ–∏—Ö –∫–æ–º–∞–Ω–¥ –∏ –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ—Ö 22 –∏–≥—Ä–æ–∫–æ–≤
let allPlayers = [...players1, ...players2];
console.log(allPlayers);
//–î–æ–±–∞–≤–∏–ª–∏ –∑–∞–ø–∞—Å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –∫ –ø–µ—Ä–≤–æ–π –∫–æ–º–∞–Ω–¥–µ
let players1Final = [...players1, 'Thiago', 'Coutinho', 'Perisic'];
console.log(players1Final);
//–†–∞—Å–ø–∞–∫–æ–≤–∞–ª–∏ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É. –ó–∞–º–µ–Ω–∏–ª–∏ x –Ω–∞ draw
let {
  odds: { team1, x: draw, team2 },
} = game;
console.log(team1, draw, team2);

//–ü–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–µ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–æ–≤ (–Ω–µ –º–∞—Å—Å–∏–≤)–∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –∏–º–µ–Ω–∞ –∏ –∑–∞–±–∏—Ç—ã–µ –≥–æ–ª—ã –≤ –∫–æ–Ω—Å–æ–ª—å. –ß–∏—Å–ª–æ –≥–æ–ª–æ–≤ —Ä–∞–≤–Ω–æ —á–∏—Å–ª—É –∏–≥—Ä–æ–∫–æ–≤
let printGoals = function (...playersNames) {
  console.log(...playersNames, playersNames.length);
};

printGoals(...game.scored); */

/* The team with the lower odd is more likely to win. Print to the console which 
team is more likely to win, without using an if/else statement or the ternary 
operator.  */

/* let winner =
  team1 < team2
    ? console.log(`${team1} is our winner!`)
    : console.log(`${team2} is our winner!`);
 */
/* switch (team1 < team2) {
  case true:
    console.log(`${game.team1} with ${team1} odds have more chances to win!`);
    break;
  case false:
    console.log(`${game.team2} with ${team2} have more chances to win!`);
    break;
  default:
    console.log(`More chances to have a draw!`);
    break;
} */
/* team1 < team2 &&
  console.log(`${game.team1} with ${team1} odds have more chances to win!`);
team1 > team2 &&
  console.log(`${game.team2} with ${team2} odds have more chances to win!`);
 */
//1

for (const [i, player] of game.scored.entries()) {
  console.log(`Goal ${i + 1}: ${player}`);
}
// 2.
const odds = Object.values(game.odds);
let average = 0;
for (const odd of odds) average += odd;
average /= odds.length;
console.log(average);

// 3.
for (const [team, odd] of Object.entries(game.odds)) {
  const teamStr = team === 'x' ? 'draw' : `victory ${game[team]}`;
  console.log(`Odd of ${teamStr} ${odd}`);
}

// Odd of victory Bayern Munich: 1.33
// Odd of draw: 3.25
// Odd of victory Borrussia Dortmund: 6.5

// BONUS
// So the solution is to loop over the array, and add the array elements as object properties, and then increase the count as we encounter a new occurence of a certain element
const scorers = {};
for (const player of game.scored) {
  scorers[player] ? scorers[player]++ : (scorers[player] = 1);
}

const gameEvents = new Map([
  [17, '‚öΩ GOAL'],
  [36, 'üîÅ Substitution'],
  [47, '‚öΩ GOAL'],
  [61, 'üîÅ Substitution'],
  [64, 'üî∂ Yellow card'],
  [69, 'üî¥ Red card'],
  [70, 'üîÅ Substitution'],
  [72, 'üîÅ Substitution'],
  [76, '‚öΩ GOAL'],
  [80, '‚öΩ GOAL'],
  [92, 'üî∂ Yellow card'],
]);

const events = [...new Set(gameEvents.values())];
console.log(events);

gameEvents.delete(64);
console.log(gameEvents);
//–≤—ã—Ç–∞—â–∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é const time = [...gameEvents.keys()].pop();

let numOfEventsPerGame = Math.floor(92 / gameEvents.size);
console.log(
  `An event happened, on average, every ${numOfEventsPerGame} minutes`
);

for (const [min, anEvent] of gameEvents) {
  console.log(
    min < 45
      ? '[FIRST HALF] ' + min + ':' + anEvent
      : '[SECOND HALF] ' + min + ':' + anEvent
  );
}
/* for (const [min, event] of gameEvents) {
  const half = min <= 45 ? 'FIRST' : 'SECOND';
  console.log(`[${half} HALF] ${min}: ${event}`);
} */
